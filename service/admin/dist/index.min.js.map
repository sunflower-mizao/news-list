{"version":3,"sources":["index.js"],"names":["fs","require","mysql2","connection","createConnection","host","user","password","database","module","exports","request","_request$body","title","type","tempPath","imgUrl","newTime","_ref","_ref2","rows","regeneratorRuntime","async","_context","prev","next","body","img","size","existsSync","mkdirSync","files","path","writeFileSync","name","readFileSync","Date","getFullYear","awrap","promise","query","sent","_slicedToArray","log","abrupt","stop","getData","p","perPage","_ref3","_ref4","_context2","concat","getTotal","_ref5","_ref6","_context3","length","getTotalData","_ref7","_ref8","_context4","deleteData","id","_ref9","_ref10","_context5"],"mappings":"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","file":"index.min.js","sourcesContent":["const fs = require(\"fs\");\r\nconst mysql2 = require(\"mysql2\");\r\n// const { deleteData } = require(\"../../controller/admin\");\r\nconst connection = mysql2.createConnection({\r\n    host:'localhost',\r\n    user:'root',\r\n    password:'123456',\r\n    database:'js04'\r\n})\r\nmodule.exports = {\r\n    async addData(request){\r\n        let {title,type} = request.body;\r\n        if(request.files.img.size>0){\r\n            if(!fs.existsSync(\"static/uploads\")){\r\n                fs.mkdirSync(\"static/uploads\");\r\n            }\r\n            let tempPath = request.files.img.path;\r\n            fs.writeFileSync(\"static/uploads/\"+request.files.img.name,fs.readFileSync(tempPath));\r\n            let imgUrl = \"/uploads/\"+request.files.img.name;\r\n            let newTime = new Date().getFullYear();\r\n            const [rows] = await connection.promise().query(\"INSERT INTO news(title,imgUrl,`from`,newTime) VALUES (?,?,?,?)\",[title,imgUrl,type,newTime]);\r\n            console.log(rows);\r\n            return rows;\r\n        }\r\n    },\r\n    async getData(p,perPage){\r\n        const [rows] = await connection.promise().query(`SELECT * FROM news LIMIT ${(p-1)*perPage},${perPage}`);\r\n        // console.log(rows);\r\n        return rows;\r\n    },\r\n    async getTotal(){\r\n        const [rows] = await connection.promise().query(`SELECT * FROM news`);\r\n        // console.log(rows);\r\n        return rows.length;\r\n    },\r\n    async getTotalData(){\r\n        const [rows] = await connection.promise().query(`SELECT * FROM news`);\r\n        return rows;\r\n    },\r\n    async deleteData(id){\r\n        const [rows] = await connection.promise().query(`DELETE FROM news WHERE id=?`,[id]);\r\n        return rows;\r\n    }\r\n}"]}