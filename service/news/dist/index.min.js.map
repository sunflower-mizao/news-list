{"version":3,"sources":["index.js"],"names":["mysql2","require","connection","createConnection","host","user","password","database","module","exports","getData","p","perPage","_ref","_ref2","rows","regeneratorRuntime","async","_context","prev","next","awrap","promise","query","concat","sent","_slicedToArray","abrupt","stop","getTotal","_ref3","_ref4","_context2","length","_ref5","_ref6","_context3","massageData","_ref7","_ref8","_context4","addMassageData","data","_ref9","_ref10","_context5"],"mappings":"mnBAAA,IAAMA,OAASC,QAAQ,UACjBC,WAAaF,OAAOG,iBAAiB,CACvCC,KAAK,YACLC,KAAK,OACLC,SAAS,SACTC,SAAS,SAEbC,OAAOC,QAAU,CACPC,QADO,SACCC,EAAEC,GADH,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAEYnB,WAAWoB,UAAUC,MAArB,4BAAAC,QAAwDb,EAAE,GAAGC,EAA7D,KAAAY,OAAwEZ,KAFpF,KAAA,EAAA,OAAAC,EAAAK,EAAAO,KAAAX,EAAAY,eAAAb,EAAA,GAEFE,EAFED,EAAA,GAAAI,EAAAS,OAAA,SAIFZ,GAJE,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAU,WALRC,SAKQ,WAAA,IAAAC,EAAAC,EAAAhB,EAAA,OAAAC,mBAAAC,MAAA,SAAAe,GAAA,OAAA,OAAAA,EAAAb,KAAAa,EAAAZ,MAAA,KAAA,EAAA,OAAAY,EAAAZ,KAAA,EAAAJ,mBAAAK,MAN0BnB,WAAAoB,UAAAC,MAAA,uBAM1B,KAAA,EAAA,OAAAO,EAAAE,EAAAP,KAAAM,EAAAL,eAAAI,EAAA,GAN0Bf,EAM1BgB,EAAA,GAAAC,EAAAL,OAAA,SAFJZ,EAAAkB,QAEI,KAAA,EAAA,IAAA,MAAA,OAAAD,EAAAJ,WAAVnB,aAAU,WAAA,IAAAyB,EAAAC,EAAApB,EAAA,OAAAC,mBAAAC,MAAA,SAAAmB,GAAA,OAAA,OAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,EAAA,OAAAgB,EAAAhB,KAAA,EAAAJ,mBAAAK,MAAAnB,WAAAoB,UAAAC,MAAA,uBAAA,KAAA,EAAA,OAAAW,EAAAE,EAAAX,KAAAU,EAAAT,eAAAQ,EAAA,GAAAnB,EAAAoB,EAAA,GAAAC,EAAAT,OAAA,SAAAZ,GAAA,KAAA,EAAA,IAAA,MAAA,OAAAqB,EAAAR,WAAAS,YAAA,WAAA,IAAAC,EAAAC,EAAAxB,EAAA,OAAAC,mBAAAC,MAAA,SAAAuB,GAAA,OAAA,OAAAA,EAAArB,KAAAqB,EAAApB,MAAA,KAAA,EAAA,OAAAoB,EAAApB,KAAA,EAAAJ,mBAAAK,MAAAnB,WAAAoB,UAAAC,MAAA,uBAAA,KAAA,EAAA,OAAAe,EAAAE,EAAAf,KAAAc,EAAAb,eAAAY,EAAA,GAAAvB,EAAAwB,EAAA,GAAAC,EAAAb,OAAA,SAAAZ,GAAA,KAAA,EAAA,IAAA,MAAA,OAAAyB,EAAAZ,WAAAa,eAAA,SAAAC,GAAA,IAAAC,EAAAC,EAAA7B,EAAA,OAAAC,mBAAAC,MAAA,SAAA4B,GAAA,OAAA,OAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,KAAA,EAAA,OAAAyB,EAAAzB,KAAA,EAAAJ,mBAAAK,MAqBUnB,WAAWoB,UAAUC,MAAM,uCAAuC,CAACmB,KArB7E,KAAA,EAAA,OAAAC,EAAAE,EAAApB,KAAAmB,EAAAlB,eAAAiB,EAAA,GAqBJ5B,EArBI6B,EAAA,GAAAC,EAAAlB,OAAA,SAAAZ,GAAA,KAAA,EAAA,IAAA,MAAA,OAAA8B,EAAAjB","file":"index.min.js","sourcesContent":["const mysql2 = require(\"mysql2\");\r\nconst connection = mysql2.createConnection({\r\n    host:'localhost',\r\n    user:'root',\r\n    password:'123456',\r\n    database:'js04'\r\n})\r\nmodule.exports = {\r\n    async getData(p,perPage){\r\n        const [rows] = await connection.promise().query(`SELECT * FROM news LIMIT ${(p-1)*perPage},${perPage}`);\r\n        // console.log(rows);\r\n        return rows;\r\n    },\r\n    async getTotal(){\r\n        const [rows] = await connection.promise().query(`SELECT * FROM news`);\r\n        // console.log(rows);\r\n        return rows.length;\r\n    },\r\n    async getTotalData(){\r\n        const [rows] = await connection.promise().query(`SELECT * FROM news`);\r\n        return rows;\r\n    },\r\n    async massageData(){\r\n        let [rows]  =  await connection.promise().query(\"SELECT * FROM chat\");\r\n        //  console.log(rows);\r\n        return rows;\r\n    },\r\n    async addMassageData(data){\r\n        let [rows] = await connection.promise().query(\"INSERT INTO chat(content) VALUES (?)\",[data]);\r\n        //  console.log(rows);\r\n        return rows;\r\n    }\r\n    \r\n}"]}